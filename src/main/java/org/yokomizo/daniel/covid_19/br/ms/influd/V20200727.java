package org.yokomizo.daniel.covid_19.br.ms.influd;

import static com.google.common.base.Functions.identity;
import static com.google.common.collect.ImmutableBiMap.toImmutableBiMap;

import java.util.Arrays;

import com.google.common.base.Function;
import com.google.common.collect.ImmutableBiMap;

public enum V20200727 {
	DT_NOTIFIC, SEM_NOT, DT_SIN_PRI, SEM_PRI, SG_UF_NOT, ID_REGIONA, CO_REGIONA, ID_MUNICIP, CO_MUN_NOT, ID_UNIDADE, CO_UNI_NOT, CS_SEXO, DT_NASC, NU_IDADE_N, TP_IDADE, COD_IDADE, CS_GESTANT, CS_RACA, CS_ETINIA, CS_ESCOL_N, ID_PAIS, CO_PAIS, SG_UF, ID_RG_RESI, CO_RG_RESI, ID_MN_RESI, CO_MUN_RES, CS_ZONA, SURTO_SG, NOSOCOMIAL, AVE_SUINO, FEBRE, TOSSE, GARGANTA, DISPNEIA, DESC_RESP, SATURACAO, DIARREIA, VOMITO, OUTRO_SIN, OUTRO_DES, PUERPERA, FATOR_RISC, CARDIOPATI, HEMATOLOGI, SIND_DOWN, HEPATICA, ASMA, DIABETES, NEUROLOGIC, PNEUMOPATI, IMUNODEPRE, RENAL, OBESIDADE, OBES_IMC, OUT_MORBI, MORB_DESC, VACINA, DT_UT_DOSE, MAE_VAC, DT_VAC_MAE, M_AMAMENTA, DT_DOSEUNI, DT_1_DOSE, DT_2_DOSE, ANTIVIRAL, TP_ANTIVIR, OUT_ANTIV, DT_ANTIVIR, HOSPITAL, DT_INTERNA, SG_UF_INTE, ID_RG_INTE, CO_RG_INTE, ID_MN_INTE, CO_MU_INTE, UTI, DT_ENTUTI, DT_SAIDUTI, SUPORT_VEN, RAIOX_RES, RAIOX_OUT, DT_RAIOX, AMOSTRA, DT_COLETA, TP_AMOSTRA, OUT_AMOST, PCR_RESUL, DT_PCR, POS_PCRFLU, TP_FLU_PCR, PCR_FLUASU, FLUASU_OUT, PCR_FLUBLI, FLUBLI_OUT, POS_PCROUT, PCR_VSR, PCR_PARA1, PCR_PARA2, PCR_PARA3, PCR_PARA4, PCR_ADENO, PCR_METAP, PCR_BOCA, PCR_RINO, PCR_OUTRO, DS_PCR_OUT, CLASSI_FIN, CLASSI_OUT, CRITERIO, EVOLUCAO, DT_EVOLUCA, DT_ENCERRA, DT_DIGITA, HISTO_VGM, PAIS_VGM, CO_PS_VGM, LO_PS_VGM, DT_VGM, DT_RT_VGM, PCR_SARS2, PAC_COCBO, PAC_DSCBO, OUT_ANIM, DOR_ABD, FADIGA, PERD_OLFT, PERD_PALA, TOMO_RES, TOMO_OUT, DT_TOMO, TP_TES_AN, DT_RES_AN, RES_AN, POS_AN_FLU, TP_FLU_AN, POS_AN_OUT, AN_SARS2, AN_VSR, AN_PARA1, AN_PARA2, AN_PARA3, AN_ADENO, AN_OUTRO, DS_AN_OUT, TP_AM_SOR, SOR_OUT, DT_CO_SOR, TP_SOR, OUT_SOR, DT_RES, RES_IGG, RES_IGM, RES_IGA;
	public static final Function<V20200727, Integer> ORDINAL = (ec) -> {
		return ec.ordinal();
	};
	public static final ImmutableBiMap<Integer, V20200727> BY_ORDINAL = Arrays.stream(values())
			.collect(toImmutableBiMap(ORDINAL, identity()));
}
